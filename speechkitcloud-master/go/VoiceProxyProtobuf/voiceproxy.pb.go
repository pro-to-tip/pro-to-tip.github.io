// Code generated by protoc-gen-go.
// source: voiceproxy.proto
// DO NOT EDIT!

/*
Package VoiceProxyProtobuf is a generated protocol buffer package.

It is generated from these files:
	voiceproxy.proto

It has these top-level messages:
	MusicRequest
	AdvancedASROptions
	ConnectionRequest
	AddData
	AlignInfo
	Word
	Result
	AddDataResponse
*/
package VoiceProxyProtobuf

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import BasicProtobuf "github.com/yandex/speechkitcloud/go/BasicProtobuf"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

type MusicRequest struct {
	// default options are "uid", "OAuth", "widget"
	MusicProxyOptions []*MusicRequest_MusicParam `protobuf:"bytes,1,rep,name=musicProxyOptions" json:"musicProxyOptions,omitempty"`
	XXX_unrecognized  []byte                     `json:"-"`
}

func (m *MusicRequest) Reset()                    { *m = MusicRequest{} }
func (m *MusicRequest) String() string            { return proto.CompactTextString(m) }
func (*MusicRequest) ProtoMessage()               {}
func (*MusicRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *MusicRequest) GetMusicProxyOptions() []*MusicRequest_MusicParam {
	if m != nil {
		return m.MusicProxyOptions
	}
	return nil
}

type MusicRequest_MusicParam struct {
	Name             *string `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Value            *string `protobuf:"bytes,2,req,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MusicRequest_MusicParam) Reset()                    { *m = MusicRequest_MusicParam{} }
func (m *MusicRequest_MusicParam) String() string            { return proto.CompactTextString(m) }
func (*MusicRequest_MusicParam) ProtoMessage()               {}
func (*MusicRequest_MusicParam) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

func (m *MusicRequest_MusicParam) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *MusicRequest_MusicParam) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

type AdvancedASROptions struct {
	PartialResults    *bool    `protobuf:"varint,1,opt,name=partial_results,def=1" json:"partial_results,omitempty"`
	Beam              *float32 `protobuf:"fixed32,2,opt,name=beam,def=-1" json:"beam,omitempty"`
	LatticeBeam       *float32 `protobuf:"fixed32,3,opt,name=lattice_beam,def=-1" json:"lattice_beam,omitempty"`
	LatticeNbest      *int32   `protobuf:"varint,4,opt,name=lattice_nbest,def=-1" json:"lattice_nbest,omitempty"`
	UtteranceSilence  *int32   `protobuf:"varint,5,opt,name=utterance_silence,def=120" json:"utterance_silence,omitempty"`
	AllowMultiUtt     *bool    `protobuf:"varint,16,opt,name=allow_multi_utt,def=1" json:"allow_multi_utt,omitempty"`
	ChunkProcessLimit *int32   `protobuf:"varint,17,opt,name=chunk_process_limit,def=100" json:"chunk_process_limit,omitempty"`
	CmnWindow         *int32   `protobuf:"varint,18,opt,name=cmn_window,def=600" json:"cmn_window,omitempty"`
	CmnLatency        *int32   `protobuf:"varint,19,opt,name=cmn_latency,def=150" json:"cmn_latency,omitempty"`
	Capitalize        *bool    `protobuf:"varint,20,opt,name=capitalize,def=0" json:"capitalize,omitempty"`
	ExpectedNumCount  *int32   `protobuf:"varint,21,opt,name=expected_num_count,def=0" json:"expected_num_count,omitempty"`
	XXX_unrecognized  []byte   `json:"-"`
}

func (m *AdvancedASROptions) Reset()                    { *m = AdvancedASROptions{} }
func (m *AdvancedASROptions) String() string            { return proto.CompactTextString(m) }
func (*AdvancedASROptions) ProtoMessage()               {}
func (*AdvancedASROptions) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

const Default_AdvancedASROptions_PartialResults bool = true
const Default_AdvancedASROptions_Beam float32 = -1
const Default_AdvancedASROptions_LatticeBeam float32 = -1
const Default_AdvancedASROptions_LatticeNbest int32 = -1
const Default_AdvancedASROptions_UtteranceSilence int32 = 120
const Default_AdvancedASROptions_AllowMultiUtt bool = true
const Default_AdvancedASROptions_ChunkProcessLimit int32 = 100
const Default_AdvancedASROptions_CmnWindow int32 = 600
const Default_AdvancedASROptions_CmnLatency int32 = 150
const Default_AdvancedASROptions_Capitalize bool = false
const Default_AdvancedASROptions_ExpectedNumCount int32 = 0

func (m *AdvancedASROptions) GetPartialResults() bool {
	if m != nil && m.PartialResults != nil {
		return *m.PartialResults
	}
	return Default_AdvancedASROptions_PartialResults
}

func (m *AdvancedASROptions) GetBeam() float32 {
	if m != nil && m.Beam != nil {
		return *m.Beam
	}
	return Default_AdvancedASROptions_Beam
}

func (m *AdvancedASROptions) GetLatticeBeam() float32 {
	if m != nil && m.LatticeBeam != nil {
		return *m.LatticeBeam
	}
	return Default_AdvancedASROptions_LatticeBeam
}

func (m *AdvancedASROptions) GetLatticeNbest() int32 {
	if m != nil && m.LatticeNbest != nil {
		return *m.LatticeNbest
	}
	return Default_AdvancedASROptions_LatticeNbest
}

func (m *AdvancedASROptions) GetUtteranceSilence() int32 {
	if m != nil && m.UtteranceSilence != nil {
		return *m.UtteranceSilence
	}
	return Default_AdvancedASROptions_UtteranceSilence
}

func (m *AdvancedASROptions) GetAllowMultiUtt() bool {
	if m != nil && m.AllowMultiUtt != nil {
		return *m.AllowMultiUtt
	}
	return Default_AdvancedASROptions_AllowMultiUtt
}

func (m *AdvancedASROptions) GetChunkProcessLimit() int32 {
	if m != nil && m.ChunkProcessLimit != nil {
		return *m.ChunkProcessLimit
	}
	return Default_AdvancedASROptions_ChunkProcessLimit
}

func (m *AdvancedASROptions) GetCmnWindow() int32 {
	if m != nil && m.CmnWindow != nil {
		return *m.CmnWindow
	}
	return Default_AdvancedASROptions_CmnWindow
}

func (m *AdvancedASROptions) GetCmnLatency() int32 {
	if m != nil && m.CmnLatency != nil {
		return *m.CmnLatency
	}
	return Default_AdvancedASROptions_CmnLatency
}

func (m *AdvancedASROptions) GetCapitalize() bool {
	if m != nil && m.Capitalize != nil {
		return *m.Capitalize
	}
	return Default_AdvancedASROptions_Capitalize
}

func (m *AdvancedASROptions) GetExpectedNumCount() int32 {
	if m != nil && m.ExpectedNumCount != nil {
		return *m.ExpectedNumCount
	}
	return Default_AdvancedASROptions_ExpectedNumCount
}

type ConnectionRequest struct {
	ProtocolVersion *int32 `protobuf:"varint,1,opt,name=protocolVersion,def=1" json:"protocolVersion,omitempty"`
	// leave empty if you are not speechkit
	SpeechkitVersion *string `protobuf:"bytes,2,req,name=speechkitVersion" json:"speechkitVersion,omitempty"`
	ServiceName      *string `protobuf:"bytes,3,req,name=serviceName" json:"serviceName,omitempty"`
	Uuid             *string `protobuf:"bytes,4,req,name=uuid" json:"uuid,omitempty"`
	ApiKey           *string `protobuf:"bytes,5,req,name=apiKey" json:"apiKey,omitempty"`
	ApplicationName  *string `protobuf:"bytes,6,req,name=applicationName" json:"applicationName,omitempty"`
	// vendor:model:type... user defined
	Device *string `protobuf:"bytes,7,req,name=device" json:"device,omitempty"`
	// lat.lat,lan.lan
	Coords *string `protobuf:"bytes,8,req,name=coords" json:"coords,omitempty"`
	// "general", "mapsyari", "freeform", "music"
	Topic *string `protobuf:"bytes,9,req,name=topic" json:"topic,omitempty"`
	// "ru-RU"
	Lang *string `protobuf:"bytes,10,req,name=lang" json:"lang,omitempty"`
	// "audio/x-speex", "audio/x-pcm;bit=16;rate=8000", etc.
	Format *string `protobuf:"bytes,11,req,name=format" json:"format,omitempty"`
	// enable punctuation mode for "freeform-dictation" topic
	Punctuation *bool `protobuf:"varint,12,opt,name=punctuation,def=1" json:"punctuation,omitempty"`
	// data will also be send to music proxy, and optional AddDataResponse may happend with musicProxyResponse
	MusicRequest             *MusicRequest       `protobuf:"bytes,17,opt,name=musicRequest" json:"musicRequest,omitempty"`
	DisableAntimatNormalizer *bool               `protobuf:"varint,18,opt,name=disableAntimatNormalizer,def=0" json:"disableAntimatNormalizer,omitempty"`
	AdvancedASROptions       *AdvancedASROptions `protobuf:"bytes,19,opt,name=advancedASROptions" json:"advancedASROptions,omitempty"`
	SkipAudioFromLogging     *bool               `protobuf:"varint,20,opt,name=skipAudioFromLogging,def=0" json:"skipAudioFromLogging,omitempty"`
	XXX_unrecognized         []byte              `json:"-"`
}

func (m *ConnectionRequest) Reset()                    { *m = ConnectionRequest{} }
func (m *ConnectionRequest) String() string            { return proto.CompactTextString(m) }
func (*ConnectionRequest) ProtoMessage()               {}
func (*ConnectionRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

const Default_ConnectionRequest_ProtocolVersion int32 = 1
const Default_ConnectionRequest_Punctuation bool = true
const Default_ConnectionRequest_DisableAntimatNormalizer bool = false
const Default_ConnectionRequest_SkipAudioFromLogging bool = false

func (m *ConnectionRequest) GetProtocolVersion() int32 {
	if m != nil && m.ProtocolVersion != nil {
		return *m.ProtocolVersion
	}
	return Default_ConnectionRequest_ProtocolVersion
}

func (m *ConnectionRequest) GetSpeechkitVersion() string {
	if m != nil && m.SpeechkitVersion != nil {
		return *m.SpeechkitVersion
	}
	return ""
}

func (m *ConnectionRequest) GetServiceName() string {
	if m != nil && m.ServiceName != nil {
		return *m.ServiceName
	}
	return ""
}

func (m *ConnectionRequest) GetUuid() string {
	if m != nil && m.Uuid != nil {
		return *m.Uuid
	}
	return ""
}

func (m *ConnectionRequest) GetApiKey() string {
	if m != nil && m.ApiKey != nil {
		return *m.ApiKey
	}
	return ""
}

func (m *ConnectionRequest) GetApplicationName() string {
	if m != nil && m.ApplicationName != nil {
		return *m.ApplicationName
	}
	return ""
}

func (m *ConnectionRequest) GetDevice() string {
	if m != nil && m.Device != nil {
		return *m.Device
	}
	return ""
}

func (m *ConnectionRequest) GetCoords() string {
	if m != nil && m.Coords != nil {
		return *m.Coords
	}
	return ""
}

func (m *ConnectionRequest) GetTopic() string {
	if m != nil && m.Topic != nil {
		return *m.Topic
	}
	return ""
}

func (m *ConnectionRequest) GetLang() string {
	if m != nil && m.Lang != nil {
		return *m.Lang
	}
	return ""
}

func (m *ConnectionRequest) GetFormat() string {
	if m != nil && m.Format != nil {
		return *m.Format
	}
	return ""
}

func (m *ConnectionRequest) GetPunctuation() bool {
	if m != nil && m.Punctuation != nil {
		return *m.Punctuation
	}
	return Default_ConnectionRequest_Punctuation
}

func (m *ConnectionRequest) GetMusicRequest() *MusicRequest {
	if m != nil {
		return m.MusicRequest
	}
	return nil
}

func (m *ConnectionRequest) GetDisableAntimatNormalizer() bool {
	if m != nil && m.DisableAntimatNormalizer != nil {
		return *m.DisableAntimatNormalizer
	}
	return Default_ConnectionRequest_DisableAntimatNormalizer
}

func (m *ConnectionRequest) GetAdvancedASROptions() *AdvancedASROptions {
	if m != nil {
		return m.AdvancedASROptions
	}
	return nil
}

func (m *ConnectionRequest) GetSkipAudioFromLogging() bool {
	if m != nil && m.SkipAudioFromLogging != nil {
		return *m.SkipAudioFromLogging
	}
	return Default_ConnectionRequest_SkipAudioFromLogging
}

type AddData struct {
	AudioData        []byte `protobuf:"bytes,1,opt,name=audioData" json:"audioData,omitempty"`
	LastChunk        *bool  `protobuf:"varint,2,req,name=lastChunk" json:"lastChunk,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *AddData) Reset()                    { *m = AddData{} }
func (m *AddData) String() string            { return proto.CompactTextString(m) }
func (*AddData) ProtoMessage()               {}
func (*AddData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *AddData) GetAudioData() []byte {
	if m != nil {
		return m.AudioData
	}
	return nil
}

func (m *AddData) GetLastChunk() bool {
	if m != nil && m.LastChunk != nil {
		return *m.LastChunk
	}
	return false
}

type AlignInfo struct {
	StartTime        *float32 `protobuf:"fixed32,1,opt,name=start_time" json:"start_time,omitempty"`
	EndTime          *float32 `protobuf:"fixed32,2,opt,name=end_time" json:"end_time,omitempty"`
	AcousticScore    *float32 `protobuf:"fixed32,3,opt,name=acoustic_score" json:"acoustic_score,omitempty"`
	GraphScore       *float32 `protobuf:"fixed32,4,opt,name=graph_score" json:"graph_score,omitempty"`
	LmScore          *float32 `protobuf:"fixed32,5,opt,name=lm_score" json:"lm_score,omitempty"`
	TotalScore       *float32 `protobuf:"fixed32,6,opt,name=total_score" json:"total_score,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *AlignInfo) Reset()                    { *m = AlignInfo{} }
func (m *AlignInfo) String() string            { return proto.CompactTextString(m) }
func (*AlignInfo) ProtoMessage()               {}
func (*AlignInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *AlignInfo) GetStartTime() float32 {
	if m != nil && m.StartTime != nil {
		return *m.StartTime
	}
	return 0
}

func (m *AlignInfo) GetEndTime() float32 {
	if m != nil && m.EndTime != nil {
		return *m.EndTime
	}
	return 0
}

func (m *AlignInfo) GetAcousticScore() float32 {
	if m != nil && m.AcousticScore != nil {
		return *m.AcousticScore
	}
	return 0
}

func (m *AlignInfo) GetGraphScore() float32 {
	if m != nil && m.GraphScore != nil {
		return *m.GraphScore
	}
	return 0
}

func (m *AlignInfo) GetLmScore() float32 {
	if m != nil && m.LmScore != nil {
		return *m.LmScore
	}
	return 0
}

func (m *AlignInfo) GetTotalScore() float32 {
	if m != nil && m.TotalScore != nil {
		return *m.TotalScore
	}
	return 0
}

type Word struct {
	Confidence       *float32   `protobuf:"fixed32,1,req,name=confidence" json:"confidence,omitempty"`
	Value            *string    `protobuf:"bytes,2,req,name=value" json:"value,omitempty"`
	AlignInfo        *AlignInfo `protobuf:"bytes,3,opt,name=align_info" json:"align_info,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *Word) Reset()                    { *m = Word{} }
func (m *Word) String() string            { return proto.CompactTextString(m) }
func (*Word) ProtoMessage()               {}
func (*Word) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *Word) GetConfidence() float32 {
	if m != nil && m.Confidence != nil {
		return *m.Confidence
	}
	return 0
}

func (m *Word) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

func (m *Word) GetAlignInfo() *AlignInfo {
	if m != nil {
		return m.AlignInfo
	}
	return nil
}

type Result struct {
	Confidence       *float32   `protobuf:"fixed32,1,req,name=confidence" json:"confidence,omitempty"`
	Words            []*Word    `protobuf:"bytes,2,rep,name=words" json:"words,omitempty"`
	Normalized       *string    `protobuf:"bytes,3,opt,name=normalized" json:"normalized,omitempty"`
	AlignInfo        *AlignInfo `protobuf:"bytes,4,opt,name=align_info" json:"align_info,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *Result) Reset()                    { *m = Result{} }
func (m *Result) String() string            { return proto.CompactTextString(m) }
func (*Result) ProtoMessage()               {}
func (*Result) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *Result) GetConfidence() float32 {
	if m != nil && m.Confidence != nil {
		return *m.Confidence
	}
	return 0
}

func (m *Result) GetWords() []*Word {
	if m != nil {
		return m.Words
	}
	return nil
}

func (m *Result) GetNormalized() string {
	if m != nil && m.Normalized != nil {
		return *m.Normalized
	}
	return ""
}

func (m *Result) GetAlignInfo() *AlignInfo {
	if m != nil {
		return m.AlignInfo
	}
	return nil
}

type AddDataResponse struct {
	ResponseCode *BasicProtobuf.ConnectionResponse_ResponseCode `protobuf:"varint,1,req,name=responseCode,enum=BasicProtobuf.ConnectionResponse_ResponseCode" json:"responseCode,omitempty"`
	Recognition  []*Result                                      `protobuf:"bytes,2,rep,name=recognition" json:"recognition,omitempty"`
	// if true : recognition contains fully parsed N-best list (n results with n words)
	// otherwise recognition contains just 1 result 1 word with current "partical result"
	EndOfUtt *bool `protobuf:"varint,3,opt,name=endOfUtt,def=0" json:"endOfUtt,omitempty"`
	// how many AddData requests were merged for this response
	MessagesCount *int32 `protobuf:"varint,4,opt,name=messagesCount,def=1" json:"messagesCount,omitempty"`
	// if not empty messageCounter should be 0
	MusicProxyResponse *string `protobuf:"bytes,5,opt,name=musicProxyResponse" json:"musicProxyResponse,omitempty"`
	XXX_unrecognized   []byte  `json:"-"`
}

func (m *AddDataResponse) Reset()                    { *m = AddDataResponse{} }
func (m *AddDataResponse) String() string            { return proto.CompactTextString(m) }
func (*AddDataResponse) ProtoMessage()               {}
func (*AddDataResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

const Default_AddDataResponse_EndOfUtt bool = false
const Default_AddDataResponse_MessagesCount int32 = 1

func (m *AddDataResponse) GetResponseCode() BasicProtobuf.ConnectionResponse_ResponseCode {
	if m != nil && m.ResponseCode != nil {
		return *m.ResponseCode
	}
	return BasicProtobuf.ConnectionResponse_OK
}

func (m *AddDataResponse) GetRecognition() []*Result {
	if m != nil {
		return m.Recognition
	}
	return nil
}

func (m *AddDataResponse) GetEndOfUtt() bool {
	if m != nil && m.EndOfUtt != nil {
		return *m.EndOfUtt
	}
	return Default_AddDataResponse_EndOfUtt
}

func (m *AddDataResponse) GetMessagesCount() int32 {
	if m != nil && m.MessagesCount != nil {
		return *m.MessagesCount
	}
	return Default_AddDataResponse_MessagesCount
}

func (m *AddDataResponse) GetMusicProxyResponse() string {
	if m != nil && m.MusicProxyResponse != nil {
		return *m.MusicProxyResponse
	}
	return ""
}

func init() {
	proto.RegisterType((*MusicRequest)(nil), "VoiceProxyProtobuf.MusicRequest")
	proto.RegisterType((*MusicRequest_MusicParam)(nil), "VoiceProxyProtobuf.MusicRequest.MusicParam")
	proto.RegisterType((*AdvancedASROptions)(nil), "VoiceProxyProtobuf.AdvancedASROptions")
	proto.RegisterType((*ConnectionRequest)(nil), "VoiceProxyProtobuf.ConnectionRequest")
	proto.RegisterType((*AddData)(nil), "VoiceProxyProtobuf.AddData")
	proto.RegisterType((*AlignInfo)(nil), "VoiceProxyProtobuf.AlignInfo")
	proto.RegisterType((*Word)(nil), "VoiceProxyProtobuf.Word")
	proto.RegisterType((*Result)(nil), "VoiceProxyProtobuf.Result")
	proto.RegisterType((*AddDataResponse)(nil), "VoiceProxyProtobuf.AddDataResponse")
}

var fileDescriptor0 = []byte{
	// 855 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x8c, 0x54, 0xcd, 0x6e, 0x1b, 0x37,
	0x10, 0x86, 0xfe, 0x1c, 0x6b, 0x56, 0x76, 0x2c, 0x3a, 0xad, 0x19, 0x01, 0x29, 0x0c, 0x15, 0x68,
	0x5c, 0x14, 0x55, 0x64, 0x01, 0xcd, 0x21, 0x37, 0xc5, 0x41, 0x80, 0xa2, 0x6d, 0x62, 0xb8, 0x68,
	0x7a, 0x29, 0xb0, 0xa0, 0xb8, 0x94, 0x4c, 0x98, 0x4b, 0x6e, 0x49, 0xae, 0x15, 0xf7, 0xd6, 0x43,
	0x6f, 0x7d, 0xaf, 0xf6, 0x0d, 0xfa, 0x3a, 0x1d, 0x72, 0x77, 0x93, 0x45, 0x22, 0xa0, 0xbd, 0xd8,
	0x9a, 0x3f, 0x7e, 0xdf, 0xce, 0x37, 0x33, 0x70, 0x74, 0x6b, 0x24, 0x17, 0x85, 0x35, 0x6f, 0xef,
	0x66, 0xf8, 0xd7, 0x1b, 0x42, 0xde, 0x04, 0xcf, 0x65, 0xf0, 0x5c, 0x06, 0xc7, 0xaa, 0x5c, 0x4f,
	0x92, 0x15, 0x73, 0x92, 0x57, 0x09, 0xd3, 0xdf, 0x3b, 0x30, 0xfa, 0xa1, 0x44, 0xfb, 0x4a, 0xfc,
	0x5a, 0x0a, 0xe7, 0xc9, 0x4b, 0x18, 0xe7, 0xc1, 0x8e, 0x35, 0xaf, 0x0b, 0x2f, 0x8d, 0x76, 0xb4,
	0x73, 0xda, 0x3b, 0x4b, 0x16, 0x5f, 0xcd, 0x3e, 0x7e, 0x6d, 0xd6, 0x2e, 0xae, 0x8c, 0x4b, 0x66,
	0x59, 0x3e, 0xf9, 0x12, 0xe0, 0xbd, 0x45, 0x46, 0xd0, 0xd7, 0x2c, 0x17, 0xf8, 0x50, 0xf7, 0x6c,
	0x48, 0x0e, 0x60, 0x70, 0xcb, 0x54, 0x29, 0x68, 0x37, 0x98, 0xd3, 0xbf, 0xbb, 0x40, 0x96, 0xd9,
	0x2d, 0xd3, 0x5c, 0x64, 0xcb, 0x1f, 0xaf, 0x6a, 0x50, 0xf2, 0x08, 0xee, 0x17, 0xcc, 0x7a, 0xc9,
	0x54, 0x6a, 0x85, 0x2b, 0x95, 0x0f, 0x3c, 0x3a, 0x67, 0xfb, 0xcf, 0xfa, 0xde, 0x96, 0x82, 0x1c,
	0x41, 0x7f, 0x25, 0x58, 0x8e, 0x6f, 0x74, 0xce, 0xba, 0xcf, 0xba, 0x5f, 0x9f, 0x13, 0x0a, 0x23,
	0xc5, 0xbc, 0x47, 0x8a, 0x69, 0x8c, 0xf4, 0xde, 0x45, 0x1e, 0xc2, 0x41, 0x13, 0xd1, 0x2b, 0x24,
	0x4a, 0xfb, 0x18, 0x1a, 0xc4, 0xd0, 0x67, 0x30, 0x2e, 0xbd, 0x17, 0x36, 0xa0, 0xa7, 0x4e, 0x2a,
	0x81, 0xff, 0xe9, 0x20, 0x86, 0x7b, 0xe7, 0x8b, 0x79, 0x60, 0xc1, 0x94, 0x32, 0xdb, 0x34, 0x47,
	0x06, 0x32, 0xc5, 0x5c, 0x7a, 0xd4, 0x62, 0x71, 0x0a, 0xc7, 0xfc, 0xba, 0xd4, 0x37, 0x29, 0xb6,
	0x93, 0x0b, 0xe7, 0x52, 0x25, 0x73, 0xe9, 0xe9, 0xb8, 0x7e, 0x60, 0x3e, 0x27, 0x27, 0x00, 0x3c,
	0xd7, 0xe9, 0x56, 0xea, 0xcc, 0x6c, 0x29, 0xa9, 0x02, 0x4f, 0x31, 0x40, 0x21, 0x09, 0x01, 0x24,
	0x86, 0x98, 0x77, 0xf4, 0xb8, 0x2e, 0xf9, 0x66, 0x8e, 0x74, 0x81, 0xb3, 0x42, 0x7a, 0xa6, 0xe4,
	0x6f, 0x82, 0x3e, 0x88, 0x70, 0x83, 0x35, 0x53, 0x4e, 0x20, 0x1d, 0x22, 0xde, 0x16, 0x82, 0x7b,
	0x91, 0xa5, 0xba, 0xcc, 0x53, 0x6e, 0x4a, 0xed, 0xe9, 0x27, 0xb1, 0xb6, 0x33, 0x9f, 0xfe, 0xd5,
	0x83, 0xf1, 0x85, 0xd1, 0x1a, 0x13, 0xb0, 0x87, 0x8d, 0xa6, 0x13, 0xec, 0x64, 0xd0, 0x8b, 0x1b,
	0xf5, 0x46, 0x58, 0x87, 0x91, 0xd8, 0x49, 0xac, 0x08, 0x4d, 0x3b, 0x72, 0x85, 0x10, 0xfc, 0xfa,
	0x46, 0xfa, 0x26, 0x18, 0x65, 0x21, 0xc7, 0x90, 0x38, 0x61, 0x6f, 0xb1, 0x69, 0xaf, 0x82, 0x74,
	0xbd, 0xe8, 0x44, 0x21, 0xcb, 0x52, 0x66, 0xd8, 0xc0, 0x60, 0x1d, 0xc2, 0x1e, 0xf2, 0xfc, 0x4e,
	0xdc, 0x61, 0xc7, 0x82, 0x7d, 0x82, 0xcd, 0x2a, 0x0a, 0x25, 0x39, 0x0b, 0xf0, 0xb1, 0x6c, 0xaf,
	0x49, 0xcc, 0x44, 0x78, 0x8a, 0xde, 0x6b, 0x6c, 0x6e, 0x8c, 0xcd, 0x1c, 0xdd, 0x6f, 0x26, 0xc2,
	0x9b, 0x42, 0x72, 0x3a, 0x6c, 0x50, 0x14, 0xd3, 0x1b, 0x0a, 0x4d, 0xf2, 0xda, 0xd8, 0x9c, 0x79,
	0x9a, 0x44, 0xfb, 0x21, 0x24, 0x45, 0xa9, 0xb9, 0x2f, 0x23, 0x0a, 0x1d, 0xb5, 0xe4, 0x78, 0x0a,
	0xa3, 0xbc, 0x35, 0x90, 0x51, 0x87, 0x64, 0x71, 0xfa, 0x5f, 0x83, 0x4b, 0x1e, 0x03, 0xcd, 0xa4,
	0x63, 0x2b, 0x25, 0x96, 0xda, 0x4b, 0x84, 0x7a, 0x15, 0x00, 0x43, 0xfb, 0x6d, 0x94, 0xec, 0x5d,
	0xff, 0x9f, 0x03, 0x61, 0x1f, 0x8d, 0x6a, 0xd4, 0x2e, 0x59, 0x7c, 0xb1, 0x0b, 0x66, 0xc7, 0x60,
	0x7f, 0x0e, 0x0f, 0xdc, 0x8d, 0x2c, 0x96, 0x65, 0x26, 0xcd, 0x4b, 0x6b, 0xf2, 0xef, 0xcd, 0x66,
	0x23, 0xf1, 0x6b, 0xdb, 0x42, 0x4f, 0x9f, 0xc0, 0xbd, 0x65, 0x96, 0xbd, 0x60, 0x9e, 0x91, 0x31,
	0x0c, 0x59, 0xc8, 0x0d, 0x46, 0x14, 0x6e, 0x14, 0x5c, 0x8a, 0x39, 0x7f, 0x11, 0x46, 0x2f, 0xca,
	0xb5, 0x3f, 0xfd, 0xa3, 0x03, 0xc3, 0xa5, 0x92, 0x1b, 0xfd, 0xad, 0x5e, 0xe3, 0xe2, 0x03, 0x38,
	0x8f, 0xdb, 0x93, 0xe2, 0xd7, 0x88, 0x58, 0xd4, 0xc5, 0x8d, 0xd9, 0x17, 0x3a, 0xab, 0x3c, 0x71,
	0x6b, 0xc8, 0xa7, 0x70, 0xc8, 0x70, 0x82, 0x1c, 0x6e, 0x46, 0xea, 0xb8, 0xb1, 0xa2, 0xda, 0x99,
	0x20, 0xfd, 0xc6, 0xb2, 0xe2, 0xba, 0x76, 0xf6, 0x9b, 0x72, 0x95, 0xd7, 0x9e, 0x41, 0x93, 0xe6,
	0x0d, 0x4e, 0x69, 0xed, 0xdc, 0x0b, 0xce, 0xe9, 0x2f, 0xd0, 0xff, 0x19, 0x95, 0x0d, 0x0c, 0xb8,
	0xd1, 0x6b, 0x99, 0xc5, 0x8d, 0x0a, 0x8b, 0xdf, 0xfd, 0x60, 0xf1, 0xc9, 0x39, 0x00, 0x0b, 0x8c,
	0x53, 0x89, 0x94, 0x23, 0x74, 0xb2, 0x78, 0xb4, 0xb3, 0x89, 0xcd, 0x77, 0x4d, 0xff, 0xec, 0xc0,
	0xde, 0x55, 0xbc, 0x06, 0x3b, 0x01, 0x1e, 0xc3, 0x60, 0x1b, 0xc7, 0xaa, 0x1b, 0x2f, 0x16, 0xdd,
	0xf5, 0x58, 0xc3, 0x4e, 0x37, 0x12, 0x67, 0x11, 0xfa, 0x43, 0x3a, 0xfd, 0xff, 0x43, 0xe7, 0x9f,
	0x0e, 0xdc, 0xaf, 0x65, 0x42, 0x56, 0x05, 0xaa, 0x2b, 0xc8, 0x0b, 0x18, 0xd9, 0xfa, 0xf7, 0x85,
	0xc9, 0x2a, 0x66, 0x87, 0x8b, 0xd9, 0xec, 0x39, 0xab, 0xce, 0x6a, 0xf5, 0x46, 0x7b, 0x4b, 0xab,
	0xe4, 0xd9, 0x55, 0xab, 0x8a, 0x3c, 0x81, 0xc4, 0x0a, 0x6e, 0x36, 0x5a, 0xfa, 0x6a, 0x25, 0xc3,
	0xf7, 0x4c, 0x76, 0xb1, 0xa9, 0xdb, 0x71, 0x12, 0xd5, 0x7d, 0xbd, 0xfe, 0x09, 0x2f, 0x54, 0xaf,
	0x3d, 0xb2, 0x14, 0x0e, 0x72, 0xbc, 0x4c, 0x6c, 0x23, 0xdc, 0x45, 0xbc, 0x16, 0xfd, 0x66, 0xf7,
	0x27, 0x40, 0xde, 0xdf, 0xfa, 0x06, 0x3d, 0x6a, 0x3b, 0xfc, 0x37, 0x00, 0x00, 0xff, 0xff, 0x12,
	0x9c, 0xad, 0x1b, 0x4c, 0x06, 0x00, 0x00,
}
